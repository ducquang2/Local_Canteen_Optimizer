<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ul="using:Local_Canteen_Optimizer.Ultis">

    <Style x:Key="BtnStyle" TargetType="ul:CustomRadioButton">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="5,5,5,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ul:CustomRadioButton">
                    <Border x:Name="border" Height="56" Width="70" BorderThickness="2" CornerRadius="5">
                        
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground" Color="{ThemeResource whiteBackColor}" />
                        </Border.Background>

                        <Grid>
                            <!-- Indicator to show when RadioButton is hovered or checked -->
                            <Border x:Name="Indicator"
                                Height="35"
                                Width="4"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="{ThemeResource buttonColorOrange}"
                                Visibility="Collapsed"
                                CornerRadius="2" />

                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <!-- Icon Content -->
                                <Image x:Name="iconImage" Source="{TemplateBinding ImageSource}" 
                                    Style="{StaticResource Image_Style}" />

                                <!-- <PathIcon Data="{TemplateBinding ImageSource}" Width="20" Height="20" Margin="0,6,0,6" /> -->

                                <!-- Text Content -->
                                <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Foreground="{ThemeResource textColor}"
                                              FontSize="14" />
                            </StackPanel>

                        </Grid>

                        <!-- VisualStateManager needs to be attached to Border or Grid -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <!-- Normal state -->
                                <VisualState x:Name="Normal" />

                                <!-- Pointer Over (IsMouseOver in WPF) -->
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource borderColor}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Indicator"
                                                                   Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        
                                        <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    To="{ThemeResource secondaryBackColor}"
                                                    Duration="0:0:0.3" />

                                        <!-- Change text color (Foreground) when hovered -->
                                        <!--<ColorAnimation Storyboard.TargetName="contentPresenter"
                                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                    To="red"
                                            Duration="0:0:0.3" />-->

                                        <!-- Change Image color on hover -->
                                        <!-- <ColorAnimation Storyboard.TargetName="iconImage"
                                                    Storyboard.TargetProperty="(IconElement.Forground).(SolidColorBrush.Color)"
                                                    To="{ThemeResource textColor}"
                                            Duration="0:0:0.3" /> -->
                                    </Storyboard>
                                </VisualState>

                                <!-- Checked state (IsChecked in WPF) -->
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource borderColor}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Indicator"
                                                                   Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        
                                        <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    To="{ThemeResource secondaryBackColor}"
                                                    Duration="0:0:0.3" />
                                        
                                        <!-- Change text color (Foreground) when Checked -->
                                        <!--<ColorAnimation Storyboard.TargetName="contentPresenter"
                                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                    To="{ThemeResource borderColor}"
                                            Duration="0:0:0.3" />-->           

                                        <!-- Change Image color on Checked -->
                                        <!-- <ColorAnimation Storyboard.TargetName="iconImage"
                                                    Storyboard.TargetProperty="(IconElement.Forground).(SolidColorBrush.Color)"
                                                    To="{ThemeResource borderColor}"
                                            Duration="0:0:0.3" /> -->
                                    </Storyboard>
                                </VisualState>

                                <!-- Pointer Exit (MouseLeave in WPF) -->
                                <VisualState x:Name="PointerExit">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="{ThemeResource pointerEnterColor}"
                                                    To="{ThemeResource pointerExitColor}"
                                                    Duration="0:0:0.3" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ImageBrush resources for Button background -->
    <ImageBrush x:Key="close_app_def" ImageSource="/Images/shutdown_def.png" Stretch="None" />
    <ImageBrush x:Key="close_app_mo" ImageSource="/Images/shutdown_mo.png" Stretch="None" />

    <!-- Style for Button (ExitApp) -->
    <Style x:Key="ExitApp" TargetType="Button">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,15,15,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Border x:Name="border" BorderThickness="0" Background="{StaticResource close_app_def}">
                    </Border>

                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <!-- Normal state -->
                            <VisualState x:Name="Normal" />

                            <!-- Pointer Over state -->
                            <VisualState x:Name="PointerOver">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                   Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource close_app_mo}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>

                            <!-- Pressed state -->
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                   Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource close_app_mo}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>